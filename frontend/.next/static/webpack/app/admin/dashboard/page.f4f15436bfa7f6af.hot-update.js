"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/dashboard/page",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   changeUserRole: () => (/* binding */ changeUserRole),\n/* harmony export */   createStudent: () => (/* binding */ createStudent),\n/* harmony export */   deleteStudent: () => (/* binding */ deleteStudent),\n/* harmony export */   getAdminDashboardStats: () => (/* binding */ getAdminDashboardStats),\n/* harmony export */   getAllStudents: () => (/* binding */ getAllStudents),\n/* harmony export */   getMyProfile: () => (/* binding */ getMyProfile),\n/* harmony export */   getUserProfile: () => (/* binding */ getUserProfile),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   registerUser: () => (/* binding */ registerUser),\n/* harmony export */   updateMyProfile: () => (/* binding */ updateMyProfile),\n/* harmony export */   updateStudent: () => (/* binding */ updateStudent),\n/* harmony export */   updateUserProfile: () => (/* binding */ updateUserProfile)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/../node_modules/axios/lib/axios.js\");\n\n// Simulate network delay for realism\nconst delay = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\n// =====================================\n// === MOCKED DATABASE (SOURCE OF TRUTH)\n// =====================================\nlet mockUsersDb = [\n    {\n        id: 'admin-01',\n        name: 'Admin User',\n        email: 'admin@test.com',\n        role: 'admin',\n        phone: '123-456-7890'\n    },\n    {\n        id: 'student-01',\n        name: 'Student User',\n        email: 'student@test.com',\n        role: 'student',\n        phone: '098-765-4321',\n        course: 'Computer Science',\n        enrollmentYear: 2022\n    },\n    {\n        id: 's1',\n        name: 'Alice Johnson',\n        email: 'alice@test.com',\n        role: 'student',\n        phone: '111-222-3333',\n        course: 'Web Development',\n        enrollmentYear: 2023\n    },\n    {\n        id: 's2',\n        name: 'Bob Williams',\n        email: 'bob@test.com',\n        role: 'student',\n        phone: '444-555-6666',\n        course: 'Data Science',\n        enrollmentYear: 2022\n    },\n    {\n        id: 's3',\n        name: 'Charlie Brown',\n        email: 'charlie@test.com',\n        role: 'student',\n        phone: '777-888-9999',\n        course: 'UX/UI Design',\n        enrollmentYear: 2023\n    },\n    {\n        id: 's4',\n        name: 'Diana Prince',\n        email: 'diana@test.com',\n        role: 'student',\n        phone: '121-232-3434',\n        course: 'Data Science',\n        enrollmentYear: 2024\n    }\n];\n// ============================================\n// === UTILITY FUNCTION: StudentRecord Mapping\n// ============================================\nconst getStudentRecords = ()=>{\n    return mockUsersDb.filter((user)=>user.role === 'student').map((user)=>({\n            id: user.id,\n            name: user.name,\n            email: user.email,\n            course: user.course || 'N/A',\n            enrollmentYear: user.enrollmentYear || 0,\n            status: user.enrollmentYear && user.enrollmentYear < 2023 ? 'Graduated' : 'Active'\n        }));\n};\n// ==============================\n// === AUTHENTICATION\n// ==============================\n// === LOGIN USER\n/**\n * Logs in a user by sending their credentials to the backend.\n * On success, returns a user profile and JWT token.\n */ const loginUser = async (email, password)=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"\".concat(\"http://localhost:5001\", \"/api/auth/login\"), {\n            email,\n            password\n        });\n        const { user, token } = response.data;\n        // Map backend's fullName to frontend's expected 'name'\n        const formattedUser = {\n            id: user.id,\n            name: user.fullName,\n            email: user.email,\n            role: user.role,\n            phone: user.phone,\n            profilePicture: user.profilePicture,\n            course: user.course,\n            enrollmentYear: user.enrollmentYear,\n            joinedAt: user.joinedAt || user.createdAt\n        };\n        return {\n            user: formattedUser,\n            token\n        };\n    } catch (error) {\n        var _error_response_data, _error_response;\n        const message = (error === null || error === void 0 ? void 0 : (_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || 'Login failed';\n        throw new Error(message);\n    }\n};\n// === REGISTER USER\nconst BASE_URL = \"http://localhost:5001\";\nconst registerUser = async (userData)=>{\n    try {\n        const url = \"\".concat(BASE_URL, \"/api/auth/register\");\n        console.log(\"ðŸ‘‰ Full Registration URL:\", url); // ðŸ‘ˆ print this!\n        const res = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(url, {\n            fullName: userData.name,\n            email: userData.email,\n            password: userData.password,\n            phone: userData.phone,\n            course: userData.course,\n            role: userData.role || 'student'\n        }, {\n            withCredentials: true\n        });\n        return res.data.user;\n    } catch (error) {\n        var _error_response_data, _error_response;\n        console.error(\"Registration error:\", error); // ðŸ‘ˆ log entire error\n        throw new Error((error === null || error === void 0 ? void 0 : (_error_response = error.response) === null || _error_response === void 0 ? void 0 : (_error_response_data = _error_response.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || 'Registration failed. Please try again.');\n    }\n};\n// === THE USER\nconst getUserProfile = async (token)=>{\n    await delay(300);\n    const userId = token.replace('mock-jwt-for-', '');\n    const user = mockUsersDb.find((u)=>u.id === userId);\n    if (!user) throw new Error(\"User not found\");\n    return user;\n};\nconst updateUserProfile = async (userId, profileData, token)=>{\n    await delay(500);\n    if (!token.includes('mock-jwt-for-')) throw new Error(\"Unauthorized access\");\n    const userIndex = mockUsersDb.findIndex((u)=>u.id === userId);\n    if (userIndex === -1) throw new Error(\"User not found for update\");\n    Object.assign(mockUsersDb[userIndex], profileData);\n    return mockUsersDb[userIndex];\n};\nconst getAllStudents = async function(token) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    await delay(800);\n    if (!token.includes('admin')) throw new Error(\"Unauthorized access\");\n    const { page = 1, limit = 5, statusFilter = 'All' } = options;\n    let allStudents = getStudentRecords();\n    if (statusFilter !== 'All') {\n        allStudents = allStudents.filter((s)=>s.status === statusFilter);\n    }\n    const total = allStudents.length;\n    const paginatedStudents = allStudents.slice((page - 1) * limit, page * limit);\n    return {\n        students: paginatedStudents,\n        total\n    };\n};\nconst createStudent = async (studentData, token)=>{\n    await delay(500);\n    if (!token.includes('admin')) throw new Error(\"Unauthorized access\");\n    if (mockUsersDb.some((user)=>user.email === studentData.email)) {\n        throw new Error('A student with this email already exists.');\n    }\n    const newUser = {\n        id: \"user-\".concat(Date.now()),\n        name: studentData.name,\n        email: studentData.email,\n        role: 'student',\n        course: studentData.course,\n        enrollmentYear: studentData.enrollmentYear\n    };\n    mockUsersDb.push(newUser);\n    return newUser;\n};\nconst updateStudent = async (id, studentData, token)=>{\n    await delay(500);\n    if (!token.includes('admin')) throw new Error(\"Unauthorized access\");\n    const userIndex = mockUsersDb.findIndex((u)=>u.id === id);\n    if (userIndex === -1) throw new Error(\"User not found for update\");\n    Object.assign(mockUsersDb[userIndex], studentData);\n    return mockUsersDb[userIndex];\n};\nconst deleteStudent = async (id, token)=>{\n    await delay(500);\n    if (!token.includes('admin')) throw new Error(\"Unauthorized access\");\n    mockUsersDb = mockUsersDb.filter((u)=>u.id !== id);\n};\nconst changeUserRole = async (userId, newRole, token)=>{\n    await delay(500);\n    if (!token.includes('admin')) throw new Error(\"Unauthorized access\");\n    const userIndex = mockUsersDb.findIndex((u)=>u.id === userId);\n    if (userIndex === -1) throw new Error(\"User not found for role change\");\n    mockUsersDb[userIndex].role = newRole;\n    return mockUsersDb[userIndex];\n};\n// ==============================\n// === USER PROFILE & DASHBOARD\n// ==============================\nconst getAdminDashboardStats = async (token)=>{\n    await delay(400);\n    if (!token.includes('admin')) throw new Error(\"Unauthorized access\");\n    const allStudents = getStudentRecords();\n    return {\n        total: allStudents.length,\n        active: allStudents.filter((s)=>s.status === 'Active').length,\n        graduated: allStudents.filter((s)=>s.status === 'Graduated').length\n    };\n};\nconst getMyProfile = async (accessToken)=>{\n    const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"\".concat(\"http://localhost:5001\", \"/api/auth/me\"), {\n        headers: {\n            Authorization: \"Bearer \".concat(accessToken)\n        }\n    });\n    const user = response.data;\n    return {\n        id: user.id,\n        name: user.fullName,\n        email: user.email,\n        phone: user.phone,\n        role: user.role,\n        course: user.course,\n        enrollmentYear: user.enrollmentYear,\n        joinedAt: user.createdAt || user.joinedAt\n    };\n};\nconst updateMyProfile = async (profileData, token)=>{\n    const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].put(\"\".concat(\"http://localhost:5001\", \"/api/users/me\"), profileData, {\n        headers: {\n            Authorization: \"Bearer \".concat(token)\n        }\n    });\n    const user = response.data;\n    return {\n        id: user.id,\n        name: user.fullName,\n        email: user.email,\n        phone: user.phone,\n        role: user.role,\n        course: user.course,\n        enrollmentYear: user.enrollmentYear,\n        joinedAt: user.createdAt || user.joinedAt\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});